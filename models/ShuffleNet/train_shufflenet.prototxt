name: "shufflenet"

layer { 
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 224
    mean_file:"/home/nssg/unclezhannssg/Downloads/anzhuangcaffe/caffe-master/examples/myfilen/MobileNet/mean.binaryproto"
  }
  data_param {
    source: "/home/nssg/unclezhannssg/Downloads/anzhuangcaffe/caffe-master/examples/myfilen/MobileNet/img_train_lmdb"
    batch_size: 3
    backend: LMDB
  }
}











layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 2
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv1_scale"
  bottom: "conv1"
  top: "conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "conv1_relu"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "resx1_match_conv"
  type: "Pooling"
  bottom: "pool1"
  top: "resx1_match_conv"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "resx1_conv1"
  type: "Convolution"
  bottom: "pool1"
  top: "resx1_conv1"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
    pad: 0
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx1_conv1_bn"
  type: "BatchNorm"
  bottom: "resx1_conv1"
  top: "resx1_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx1_conv1_scale"
  bottom: "resx1_conv1"
  top: "resx1_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx1_conv1_relu"
  type: "ReLU"
  bottom: "resx1_conv1"
  top: "resx1_conv1"
}
layer {
  name: "resx1_conv2"
  type: "Convolution"
  bottom: "resx1_conv1"
  top: "resx1_conv2"
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 2
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx1_conv2_bn"
  type: "BatchNorm"
  bottom: "resx1_conv2"
  top: "resx1_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx1_conv2_scale"
  bottom: "resx1_conv2"
  top: "resx1_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx1_conv3"
  type: "Convolution"
  bottom: "resx1_conv2"
  top: "resx1_conv3"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx1_conv3_bn"
  type: "BatchNorm"
  bottom: "resx1_conv3"
  top: "resx1_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx1_conv3_scale"
  bottom: "resx1_conv3"
  top: "resx1_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx1_concat"
  type: "Concat"
  bottom: "resx1_match_conv"
  bottom: "resx1_conv3"
  top: "resx1_concat"
}
layer {
  name: "resx1_concat_relu"
  type: "ReLU"
  bottom: "resx1_concat"
  top: "resx1_concat"
}
layer {
  name: "resx2_conv1"
  type: "Convolution"
  bottom: "resx1_concat"
  top: "resx2_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx2_conv1_bn"
  type: "BatchNorm"
  bottom: "resx2_conv1"
  top: "resx2_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx2_conv1_scale"
  bottom: "resx2_conv1"
  top: "resx2_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx2_conv1_relu"
  type: "ReLU"
  bottom: "resx2_conv1"
  top: "resx2_conv1"
}
layer {
  name: "shuffle2"
  type: "ShuffleChannel"
  bottom: "resx2_conv1"
  top: "shuffle2"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx2_conv2"
  type: "Convolution"
  bottom: "shuffle2"
  top: "resx2_conv2"
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    group: 32
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx2_conv2_bn"
  type: "BatchNorm"
  bottom: "resx2_conv2"
  top: "resx2_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx2_conv2_scale"
  bottom: "resx2_conv2"
  top: "resx2_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx2_conv3"
  type: "Convolution"
  bottom: "resx2_conv2"
  top: "resx2_conv3"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx2_conv3_bn"
  type: "BatchNorm"
  bottom: "resx2_conv3"
  top: "resx2_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx2_conv3_scale"
  bottom: "resx2_conv3"
  top: "resx2_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx2_elewise"
  type: "Eltwise"
  bottom: "resx1_concat"
  bottom: "resx2_conv3"
  top: "resx2_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx2_elewise_relu"
  type: "ReLU"
  bottom: "resx2_elewise"
  top: "resx2_elewise"
}
layer {
  name: "resx3_conv1"
  type: "Convolution"
  bottom: "resx2_elewise"
  top: "resx3_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx3_conv1_bn"
  type: "BatchNorm"
  bottom: "resx3_conv1"
  top: "resx3_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx3_conv1_scale"
  bottom: "resx3_conv1"
  top: "resx3_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx3_conv1_relu"
  type: "ReLU"
  bottom: "resx3_conv1"
  top: "resx3_conv1"
}
layer {
  name: "shuffle3"
  type: "ShuffleChannel"
  bottom: "resx3_conv1"
  top: "shuffle3"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx3_conv2"
  type: "Convolution"
  bottom: "shuffle3"
  top: "resx3_conv2"
  convolution_param {
    num_output: 32
    kernel_size: 3
    group: 32
    stride: 1
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx3_conv2_bn"
  type: "BatchNorm"
  bottom: "resx3_conv2"
  top: "resx3_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx3_conv2_scale"
  bottom: "resx3_conv2"
  top: "resx3_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx3_conv3"
  type: "Convolution"
  bottom: "resx3_conv2"
  top: "resx3_conv3"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx3_conv3_bn"
  type: "BatchNorm"
  bottom: "resx3_conv3"
  top: "resx3_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx3_conv3_scale"
  bottom: "resx3_conv3"
  top: "resx3_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx3_elewise"
  type: "Eltwise"
  bottom: "resx2_elewise"
  bottom: "resx3_conv3"
  top: "resx3_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx3_elewise_relu"
  type: "ReLU"
  bottom: "resx3_elewise"
  top: "resx3_elewise"
}
layer {
  name: "resx4_conv1"
  type: "Convolution"
  bottom: "resx3_elewise"
  top: "resx4_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx4_conv1_bn"
  type: "BatchNorm"
  bottom: "resx4_conv1"
  top: "resx4_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx4_conv1_scale"
  bottom: "resx4_conv1"
  top: "resx4_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx4_conv1_relu"
  type: "ReLU"
  bottom: "resx4_conv1"
  top: "resx4_conv1"
}
layer {
  name: "shuffle4"
  type: "ShuffleChannel"
  bottom: "resx4_conv1"
  top: "shuffle4"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx4_conv2"
  type: "Convolution"
  bottom: "shuffle4"
  top: "resx4_conv2"
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    group: 32
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx4_conv2_bn"
  type: "BatchNorm"
  bottom: "resx4_conv2"
  top: "resx4_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx4_conv2_scale"
  bottom: "resx4_conv2"
  top: "resx4_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx4_conv3"
  type: "Convolution"
  bottom: "resx4_conv2"
  top: "resx4_conv3"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx4_conv3_bn"
  type: "BatchNorm"
  bottom: "resx4_conv3"
  top: "resx4_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx4_conv3_scale"
  bottom: "resx4_conv3"
  top: "resx4_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx4_elewise"
  type: "Eltwise"
  bottom: "resx3_elewise"
  bottom: "resx4_conv3"
  top: "resx4_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx4_elewise_relu"
  type: "ReLU"
  bottom: "resx4_elewise"
  top: "resx4_elewise"
}

layer {
  name: "resx5_conv1"
  type: "Convolution"
  bottom: "resx4_elewise"
  top: "resx5_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx5_conv1_bn"
  type: "BatchNorm"
  bottom: "resx5_conv1"
  top: "resx5_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx5_conv1_scale"
  bottom: "resx5_conv1"
  top: "resx5_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx5_conv1_relu"
  type: "ReLU"
  bottom: "resx5_conv1"
  top: "resx5_conv1"
}
layer {
  name: "shuffle5"
  type: "ShuffleChannel"
  bottom: "resx5_conv1"
  top: "shuffle5"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx5_conv2"
  type: "Convolution"
  bottom: "shuffle5"
  top: "resx5_conv2"
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    group: 32
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx5_conv2_bn"
  type: "BatchNorm"
  bottom: "resx5_conv2"
  top: "resx5_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx5_conv2_scale"
  bottom: "resx5_conv2"
  top: "resx5_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx5_conv3"
  type: "Convolution"
  bottom: "resx5_conv2"
  top: "resx5_conv3"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx5_conv3_bn"
  type: "BatchNorm"
  bottom: "resx5_conv3"
  top: "resx5_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx5_conv3_scale"
  bottom: "resx5_conv3"
  top: "resx5_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx5_elewise"
  type: "Eltwise"
  bottom: "resx4_elewise"
  bottom: "resx5_conv3"
  top: "resx5_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx5_elewise_relu"
  type: "ReLU"
  bottom: "resx5_elewise"
  top: "resx5_elewise"
}
layer {
  name: "resx6_conv1"
  type: "Convolution"
  bottom: "resx5_elewise"
  top: "resx6_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx6_conv1_bn"
  type: "BatchNorm"
  bottom: "resx6_conv1"
  top: "resx6_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx6_conv1_scale"
  bottom: "resx6_conv1"
  top: "resx6_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx6_conv1_relu"
  type: "ReLU"
  bottom: "resx6_conv1"
  top: "resx6_conv1"
}
layer {
  name: "shuffle6"
  type: "ShuffleChannel"
  bottom: "resx6_conv1"
  top: "shuffle6"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx6_conv2"
  type: "Convolution"
  bottom: "shuffle6"
  top: "resx6_conv2"
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    group: 32
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx6_conv2_bn"
  type: "BatchNorm"
  bottom: "resx6_conv2"
  top: "resx6_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx6_conv2_scale"
  bottom: "resx6_conv2"
  top: "resx6_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx6_conv3"
  type: "Convolution"
  bottom: "resx6_conv2"
  top: "resx6_conv3"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx6_conv3_bn"
  type: "BatchNorm"
  bottom: "resx6_conv3"
  top: "resx6_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx6_conv3_scale"
  bottom: "resx6_conv3"
  top: "resx6_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx6_elewise"
  type: "Eltwise"
  bottom: "resx5_elewise"
  bottom: "resx6_conv3"
  top: "resx6_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx6_elewise_relu"
  type: "ReLU"
  bottom: "resx6_elewise"
  top: "resx6_elewise"
}
layer {
  name: "resx7_conv1"
  type: "Convolution"
  bottom: "resx6_elewise"
  top: "resx7_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx7_conv1_bn"
  type: "BatchNorm"
  bottom: "resx7_conv1"
  top: "resx7_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx7_conv1_scale"
  bottom: "resx7_conv1"
  top: "resx7_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx7_conv1_relu"
  type: "ReLU"
  bottom: "resx7_conv1"
  top: "resx7_conv1"
}
layer {
  name: "shuffle7"
  type: "ShuffleChannel"
  bottom: "resx7_conv1"
  top: "shuffle7"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx7_conv2"
  type: "Convolution"
  bottom: "shuffle7"
  top: "resx7_conv2"
  convolution_param {
    num_output: 32
    kernel_size: 3
    group: 32
    stride: 1
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx7_conv2_bn"
  type: "BatchNorm"
  bottom: "resx7_conv2"
  top: "resx7_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx7_conv2_scale"
  bottom: "resx7_conv2"
  top: "resx7_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx7_conv3"
  type: "Convolution"
  bottom: "resx7_conv2"
  top: "resx7_conv3"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx7_conv3_bn"
  type: "BatchNorm"
  bottom: "resx7_conv3"
  top: "resx7_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx7_conv3_scale"
  bottom: "resx7_conv3"
  top: "resx7_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx7_elewise"
  type: "Eltwise"
  bottom: "resx6_elewise"
  bottom: "resx7_conv3"
  top: "resx7_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx7_elewise_relu"
  type: "ReLU"
  bottom: "resx7_elewise"
  top: "resx7_elewise"
}
layer {
  name: "resx7_match_conv"
  type: "Pooling"
  bottom: "resx7_elewise"
  top: "resx7_match_conv"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}




layer {
  name: "resx8_conv1"
  type: "Convolution"
  bottom: "resx7_elewise"
  top: "resx8_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx8_conv1_bn"
  type: "BatchNorm"
  bottom: "resx8_conv1"
  top: "resx8_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx8_conv1_scale"
  bottom: "resx8_conv1"
  top: "resx8_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx8_conv1_relu"
  type: "ReLU"
  bottom: "resx8_conv1"
  top: "resx8_conv1"
}
layer {
  name: "shuffle8"
  type: "ShuffleChannel"
  bottom: "resx8_conv1"
  top: "shuffle8"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx8_conv2"
  type: "Convolution"
  bottom: "shuffle8"
  top: "resx8_conv2"
  convolution_param {
    num_output: 32
    group: 32
    kernel_size: 3
    stride: 2
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx8_conv2_bn"
  type: "BatchNorm"
  bottom: "resx8_conv2"
  top: "resx8_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx8_conv2_scale"
  bottom: "resx8_conv2"
  top: "resx8_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx8_conv3"
  type: "Convolution"
  bottom: "resx8_conv2"
  top: "resx8_conv3"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx8_conv3_bn"
  type: "BatchNorm"
  bottom: "resx8_conv3"
  top: "resx8_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx8_conv3_scale"
  bottom: "resx8_conv3"
  top: "resx8_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx8_concat"
  type: "Concat"
  bottom: "resx7_match_conv"
  bottom: "resx8_conv3"
  top: "resx8_concat"
}
layer {
  name: "resx8_concat_relu"
  type: "ReLU"
  bottom: "resx8_concat"
  top: "resx8_concat"
}
layer {
  name: "resx9_conv1"
  type: "Convolution"
  bottom: "resx8_concat"
  top: "resx9_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx9_conv1_bn"
  type: "BatchNorm"
  bottom: "resx9_conv1"
  top: "resx9_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx9_conv1_scale"
  bottom: "resx9_conv1"
  top: "resx9_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx9_conv1_relu"
  type: "ReLU"
  bottom: "resx9_conv1"
  top: "resx9_conv1"
}
layer {
  name: "shuffle9"
  type: "ShuffleChannel"
  bottom: "resx9_conv1"
  top: "shuffle9"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx9_conv2"
  type: "Convolution"
  bottom: "shuffle9"
  top: "resx9_conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx9_conv2_bn"
  type: "BatchNorm"
  bottom: "resx9_conv2"
  top: "resx9_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx9_conv2_scale"
  bottom: "resx9_conv2"
  top: "resx9_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx9_conv3"
  type: "Convolution"
  bottom: "resx9_conv2"
  top: "resx9_conv3"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx9_conv3_bn"
  type: "BatchNorm"
  bottom: "resx9_conv3"
  top: "resx9_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx9_conv3_scale"
  bottom: "resx9_conv3"
  top: "resx9_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx9_elewise"
  type: "Eltwise"
  bottom: "resx8_concat"
  bottom: "resx9_conv3"
  top: "resx9_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx9_elewise_relu"
  type: "ReLU"
  bottom: "resx9_elewise"
  top: "resx9_elewise"
}
layer {
  name: "resx10_conv1"
  type: "Convolution"
  bottom: "resx9_elewise"
  top: "resx10_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx10_conv1_bn"
  type: "BatchNorm"
  bottom: "resx10_conv1"
  top: "resx10_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx10_conv1_scale"
  bottom: "resx10_conv1"
  top: "resx10_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx10_conv1_relu"
  type: "ReLU"
  bottom: "resx10_conv1"
  top: "resx10_conv1"
}
layer {
  name: "shuffle10"
  type: "ShuffleChannel"
  bottom: "resx10_conv1"
  top: "shuffle10"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx10_conv2"
  type: "Convolution"
  bottom: "shuffle10"
  top: "resx10_conv2"
  convolution_param {
    num_output: 64
    group: 32
    kernel_size: 3
    stride: 1
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx10_conv2_bn"
  type: "BatchNorm"
  bottom: "resx10_conv2"
  top: "resx10_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx10_conv2_scale"
  bottom: "resx10_conv2"
  top: "resx10_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx10_conv3"
  type: "Convolution"
  bottom: "resx10_conv2"
  top: "resx10_conv3"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx10_conv3_bn"
  type: "BatchNorm"
  bottom: "resx10_conv3"
  top: "resx10_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx10_conv3_scale"
  bottom: "resx10_conv3"
  top: "resx10_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx10_elewise"
  type: "Eltwise"
  bottom: "resx9_elewise"
  bottom: "resx10_conv3"
  top: "resx10_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx10_elewise_relu"
  type: "ReLU"
  bottom: "resx10_elewise"
  top: "resx10_elewise"
}
layer {
  name: "resx11_conv1"
  type: "Convolution"
  bottom: "resx10_elewise"
  top: "resx11_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx11_conv1_bn"
  type: "BatchNorm"
  bottom: "resx11_conv1"
  top: "resx11_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx11_conv1_scale"
  bottom: "resx11_conv1"
  top: "resx11_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx11_conv1_relu"
  type: "ReLU"
  bottom: "resx11_conv1"
  top: "resx11_conv1"
}
layer {
  name: "shuffle11"
  type: "ShuffleChannel"
  bottom: "resx11_conv1"
  top: "shuffle11"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx11_conv2"
  type: "Convolution"
  bottom: "shuffle11"
  top: "resx11_conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    group: 32
    stride: 1
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx11_conv2_bn"
  type: "BatchNorm"
  bottom: "resx11_conv2"
  top: "resx11_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx11_conv2_scale"
  bottom: "resx11_conv2"
  top: "resx11_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx11_conv3"
  type: "Convolution"
  bottom: "resx11_conv2"
  top: "resx11_conv3"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx11_conv3_bn"
  type: "BatchNorm"
  bottom: "resx11_conv3"
  top: "resx11_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx11_conv3_scale"
  bottom: "resx11_conv3"
  top: "resx11_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx11_elewise"
  type: "Eltwise"
  bottom: "resx10_elewise"
  bottom: "resx11_conv3"
  top: "resx11_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx11_elewise_relu"
  type: "ReLU"
  bottom: "resx11_elewise"
  top: "resx11_elewise"
}

layer {
  name: "resx12_match_conv"
  type: "Pooling"
  bottom: "resx11_elewise"
  top: "resx12_match_conv"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "resx12_conv1"
  type: "Convolution"
  bottom: "resx11_elewise"
  top: "resx12_conv1"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx12_conv1_bn"
  type: "BatchNorm"
  bottom: "resx12_conv1"
  top: "resx12_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx12_conv1_scale"
  bottom: "resx12_conv1"
  top: "resx12_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx12_conv1_relu"
  type: "ReLU"
  bottom: "resx12_conv1"
  top: "resx12_conv1"
}
layer {
  name: "shuffle12"
  type: "ShuffleChannel"
  bottom: "resx12_conv1"
  top: "shuffle12"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx12_conv2"
  type: "Convolution"
  bottom: "shuffle12"
  top: "resx12_conv2"
  convolution_param {
    num_output: 64
    group: 32
    kernel_size: 3
    stride: 2
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx12_conv2_bn"
  type: "BatchNorm"
  bottom: "resx12_conv2"
  top: "resx12_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx12_conv2_scale"
  bottom: "resx12_conv2"
  top: "resx12_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx12_conv3"
  type: "Convolution"
  bottom: "resx12_conv2"
  top: "resx12_conv3"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx12_conv3_bn"
  type: "BatchNorm"
  bottom: "resx12_conv3"
  top: "resx12_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx12_conv3_scale"
  bottom: "resx12_conv3"
  top: "resx12_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx12_concat"
  type: "Concat"
  bottom: "resx12_match_conv"
  bottom: "resx12_conv3"
  top: "resx12_concat"
}
layer {
  name: "resx12_concat_relu"
  type: "ReLU"
  bottom: "resx12_concat"
  top: "resx12_concat"
}
layer {
  name: "resx13_conv1"
  type: "Convolution"
  bottom: "resx12_concat"
  top: "resx13_conv1"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx13_conv1_bn"
  type: "BatchNorm"
  bottom: "resx13_conv1"
  top: "resx13_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx13_conv1_scale"
  bottom: "resx13_conv1"
  top: "resx13_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx13_conv1_relu"
  type: "ReLU"
  bottom: "resx13_conv1"
  top: "resx13_conv1"
}
layer {
  name: "shuffle13"
  type: "ShuffleChannel"
  bottom: "resx13_conv1"
  top: "shuffle13"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx13_conv2"
  type: "Convolution"
  bottom: "shuffle13"
  top: "resx13_conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    group: 64
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx13_conv2_bn"
  type: "BatchNorm"
  bottom: "resx13_conv2"
  top: "resx13_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx13_conv2_scale"
  bottom: "resx13_conv2"
  top: "resx13_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx13_conv3"
  type: "Convolution"
  bottom: "resx13_conv2"
  top: "resx13_conv3"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx13_conv3_bn"
  type: "BatchNorm"
  bottom: "resx13_conv3"
  top: "resx13_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx13_conv3_scale"
  bottom: "resx13_conv3"
  top: "resx13_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx13_elewise"
  type: "Eltwise"
  bottom: "resx12_concat"
  bottom: "resx13_conv3"
  top: "resx13_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx13_elewise_relu"
  type: "ReLU"
  bottom: "resx13_elewise"
  top: "resx13_elewise"
}
layer {
  name: "resx14_conv1"
  type: "Convolution"
  bottom: "resx13_elewise"
  top: "resx14_conv1"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx14_conv1_bn"
  type: "BatchNorm"
  bottom: "resx14_conv1"
  top: "resx14_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx14_conv1_scale"
  bottom: "resx14_conv1"
  top: "resx14_conv1"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx14_conv1_relu"
  type: "ReLU"
  bottom: "resx14_conv1"
  top: "resx14_conv1"
}
layer {
  name: "shuffle14"
  type: "ShuffleChannel"
  bottom: "resx14_conv1"
  top: "shuffle14"
  shuffle_channel_param {
    group: 4
  }
}
layer {
  name: "resx14_conv2"
  type: "Convolution"
  bottom: "shuffle14"
  top: "resx14_conv2"
  convolution_param {
    num_output: 128
    group:64
    kernel_size: 3
    stride: 1
    pad: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx14_conv2_bn"
  type: "BatchNorm"
  bottom: "resx14_conv2"
  top: "resx14_conv2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx14_conv2_scale"
  bottom: "resx14_conv2"
  top: "resx14_conv2"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx14_conv3"
  type: "Convolution"
  bottom: "resx14_conv2"
  top: "resx14_conv3"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    pad: 0
    group: 4
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "resx14_conv3_bn"
  type: "BatchNorm"
  bottom: "resx14_conv3"
  top: "resx14_conv3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "resx14_conv3_scale"
  bottom: "resx14_conv3"
  top: "resx14_conv3"
  type: "Scale"
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "resx14_elewise"
  type: "Eltwise"
  bottom: "resx13_elewise"
  bottom: "resx14_conv3"
  top: "resx14_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "resx14_elewise_relu"
  type: "ReLU"
  bottom: "resx14_elewise"
  top: "resx14_elewise"
}
















layer {
  name: "pool5/7x7_s1"
  type: "Pooling"
  bottom: "resx14_elewise"
  top: "pool5/7x7_s1"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "pool5/dropout_7x7_s1"
  type: "Dropout"
  bottom: "pool5/7x7_s1"
  top: "pool5/7x7_s1"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer {
  name: "classifier"
  type: "InnerProduct"
  bottom: "pool5/7x7_s1"
  top: "classifier"
  inner_product_param {
    num_output: 16
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "classifier"
  bottom:"label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "classifier"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
