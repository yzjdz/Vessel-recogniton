name: "SENet"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 224
    mean_file:"/home/nssg/unclezhannssg/Downloads/anzhuangcaffe/caffe-master/examples/myfilen/SENet14/mean.binaryproto"
  }
  data_param {
    source: "/home/nssg/unclezhannssg/Downloads/anzhuangcaffe/caffe-master/examples/myfilen/SENet14/img_val_lmdb"
    batch_size: 3
    backend: LMDB
  }
}
layer {
  name: "conv1_1/3x3_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1/3x3_s2"
  convolution_param {
    num_output: 16
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv1_1/3x3_s2/bn"
  type: "BatchNorm"
  bottom: "conv1_1/3x3_s2"
  top: "conv1_1/3x3_s2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv1_1/3x3_s2/bn/scale"
  type: "Scale"
  bottom: "conv1_1/3x3_s2"
  top: "conv1_1/3x3_s2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_1/relu_3x3_s2"
  type: "ReLU"
  bottom: "conv1_1/3x3_s2"
  top: "conv1_1/3x3_s2"
}









layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1_1/3x3_s2"
  top: "pool1/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2_1_1x1_reduce"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "conv2_1_1x1_reduce"
  convolution_param {
    num_output: 16
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_1_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_1_1x1_reduce"
  top: "conv2_1_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_1_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_1_1x1_reduce"
  top: "conv2_1_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_1_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_1_1x1_reduce"
  top: "conv2_1_1x1_reduce"
}
layer {
  name: "conv2_1_3x3"
  type: "Convolution"
  bottom: "conv2_1_1x1_reduce"
  top: "conv2_1_3x3"
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 16
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_1_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_1_3x3"
  top: "conv2_1_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_1_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_1_3x3"
  top: "conv2_1_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_1_3x3/relu"
  type: "ReLU"
  bottom: "conv2_1_3x3"
  top: "conv2_1_3x3"
}
layer {
  name: "conv2_1_1x1_increase"
  type: "Convolution"
  bottom: "conv2_1_3x3"
  top: "conv2_1_1x1_increase"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_1_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_1_1x1_increase"
  top: "conv2_1_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_1_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_1_1x1_increase"
  top: "conv2_1_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_1_global_pool"
  type: "Pooling"
  bottom: "conv2_1_1x1_increase"
  top: "conv2_1_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_1_1x1_down"
  type: "Convolution"
  bottom: "conv2_1_global_pool"
  top: "conv2_1_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_1_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_1_1x1_down"
  top: "conv2_1_1x1_down"
}
layer {
  name: "conv2_1_1x1_up"
  type: "Convolution"
  bottom: "conv2_1_1x1_down"
  top: "conv2_1_1x1_up"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_1_prob"
  type: "Sigmoid"
  bottom: "conv2_1_1x1_up"
  top: "conv2_1_1x1_up"
}
layer {
  name: "conv2_1_1x1_proj"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "conv2_1_1x1_proj"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_1_1x1_proj/bn"
  type: "BatchNorm"
  bottom: "conv2_1_1x1_proj"
  top: "conv2_1_1x1_proj"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_1_1x1_proj/bn/scale"
  type: "Scale"
  bottom: "conv2_1_1x1_proj"
  top: "conv2_1_1x1_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_1"
  type: "Axpy"
  bottom: "conv2_1_1x1_up"
  bottom: "conv2_1_1x1_increase"
  bottom: "conv2_1_1x1_proj"
  top: "conv2_1"
}
layer {
  name: "conv2_1/relu"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_2_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_2_1x1_reduce"
  top: "conv2_2_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_2_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_2_1x1_reduce"
  top: "conv2_2_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_2_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_2_1x1_reduce"
  top: "conv2_2_1x1_reduce"
}
layer {
  name: "conv2_2_3x3"
  type: "Convolution"
  bottom: "conv2_2_1x1_reduce"
  top: "conv2_2_3x3"
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_2_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_2_3x3"
  top: "conv2_2_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_2_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_2_3x3"
  top: "conv2_2_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_2_3x3/relu"
  type: "ReLU"
  bottom: "conv2_2_3x3"
  top: "conv2_2_3x3"
}
layer {
  name: "conv2_2_1x1_increase"
  type: "Convolution"
  bottom: "conv2_2_3x3"
  top: "conv2_2_1x1_increase"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_2_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_2_1x1_increase"
  top: "conv2_2_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_2_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_2_1x1_increase"
  top: "conv2_2_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_2_global_pool"
  type: "Pooling"
  bottom: "conv2_2_1x1_increase"
  top: "conv2_2_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_2_1x1_down"
  type: "Convolution"
  bottom: "conv2_2_global_pool"
  top: "conv2_2_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_2_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_2_1x1_down"
  top: "conv2_2_1x1_down"
}
layer {
  name: "conv2_2_1x1_up"
  type: "Convolution"
  bottom: "conv2_2_1x1_down"
  top: "conv2_2_1x1_up"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_2_prob"
  type: "Sigmoid"
  bottom: "conv2_2_1x1_up"
  top: "conv2_2_1x1_up"
}
layer {
  name: "conv2_2"
  type: "Axpy"
  bottom: "conv2_2_1x1_up"
  bottom: "conv2_2_1x1_increase"
  bottom: "conv2_1"
  top: "conv2_2"
}
layer {
  name: "conv2_2/relu"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}




layer {
  name: "conv2_3_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_2"
  top: "conv2_3_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_3_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_3_1x1_reduce"
  top: "conv2_3_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_3_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_3_1x1_reduce"
  top: "conv2_3_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_3_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_3_1x1_reduce"
  top: "conv2_3_1x1_reduce"
}
layer {
  name: "conv2_3_3x3"
  type: "Convolution"
  bottom: "conv2_3_1x1_reduce"
  top: "conv2_3_3x3"
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_3_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_3_3x3"
  top: "conv2_3_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_3_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_3_3x3"
  top: "conv2_3_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_3_3x3/relu"
  type: "ReLU"
  bottom: "conv2_3_3x3"
  top: "conv2_3_3x3"
}
layer {
  name: "conv2_3_1x1_increase"
  type: "Convolution"
  bottom: "conv2_3_3x3"
  top: "conv2_3_1x1_increase"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_3_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_3_1x1_increase"
  top: "conv2_3_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_3_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_3_1x1_increase"
  top: "conv2_3_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_3_global_pool"
  type: "Pooling"
  bottom: "conv2_3_1x1_increase"
  top: "conv2_3_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_3_1x1_down"
  type: "Convolution"
  bottom: "conv2_3_global_pool"
  top: "conv2_3_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_3_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_3_1x1_down"
  top: "conv2_3_1x1_down"
}
layer {
  name: "conv2_3_1x1_up"
  type: "Convolution"
  bottom: "conv2_3_1x1_down"
  top: "conv2_3_1x1_up"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_3_prob"
  type: "Sigmoid"
  bottom: "conv2_3_1x1_up"
  top: "conv2_3_1x1_up"
}
layer {
  name: "conv2_3"
  type: "Axpy"
  bottom: "conv2_3_1x1_up"
  bottom: "conv2_3_1x1_increase"
  bottom: "conv2_2"
  top: "conv2_3"
}
layer {
  name: "conv2_3/relu"
  type: "ReLU"
  bottom: "conv2_3"
  top: "conv2_3"
}



layer {
  name: "conv2_4_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_3"
  top: "conv2_4_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_4_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_4_1x1_reduce"
  top: "conv2_4_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_4_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_4_1x1_reduce"
  top: "conv2_4_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_4_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_4_1x1_reduce"
  top: "conv2_4_1x1_reduce"
}
layer {
  name: "conv2_4_3x3"
  type: "Convolution"
  bottom: "conv2_4_1x1_reduce"
  top: "conv2_4_3x3"
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_4_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_4_3x3"
  top: "conv2_4_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_4_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_4_3x3"
  top: "conv2_4_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_4_3x3/relu"
  type: "ReLU"
  bottom: "conv2_4_3x3"
  top: "conv2_4_3x3"
}
layer {
  name: "conv2_4_1x1_increase"
  type: "Convolution"
  bottom: "conv2_4_3x3"
  top: "conv2_4_1x1_increase"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_4_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_4_1x1_increase"
  top: "conv2_4_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_4_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_4_1x1_increase"
  top: "conv2_4_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_4_global_pool"
  type: "Pooling"
  bottom: "conv2_4_1x1_increase"
  top: "conv2_4_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_4_1x1_down"
  type: "Convolution"
  bottom: "conv2_4_global_pool"
  top: "conv2_4_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_4_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_4_1x1_down"
  top: "conv2_4_1x1_down"
}
layer {
  name: "conv2_4_1x1_up"
  type: "Convolution"
  bottom: "conv2_4_1x1_down"
  top: "conv2_4_1x1_up"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_4_prob"
  type: "Sigmoid"
  bottom: "conv2_4_1x1_up"
  top: "conv2_4_1x1_up"
}
layer {
  name: "conv2_4"
  type: "Axpy"
  bottom: "conv2_4_1x1_up"
  bottom: "conv2_4_1x1_increase"
  bottom: "conv2_3"
  top: "conv2_4"
}
layer {
  name: "conv2_4/relu"
  type: "ReLU"
  bottom: "conv2_4"
  top: "conv2_4"
}



layer {
  name: "conv2_5_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_4"
  top: "conv2_5_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_5_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_5_1x1_reduce"
  top: "conv2_5_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_5_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_5_1x1_reduce"
  top: "conv2_5_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_5_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_5_1x1_reduce"
  top: "conv2_5_1x1_reduce"
}
layer {
  name: "conv2_5_3x3"
  type: "Convolution"
  bottom: "conv2_5_1x1_reduce"
  top: "conv2_5_3x3"
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_5_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_5_3x3"
  top: "conv2_5_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_5_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_5_3x3"
  top: "conv2_5_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_5_3x3/relu"
  type: "ReLU"
  bottom: "conv2_5_3x3"
  top: "conv2_5_3x3"
}
layer {
  name: "conv2_5_1x1_increase"
  type: "Convolution"
  bottom: "conv2_5_3x3"
  top: "conv2_5_1x1_increase"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_5_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_5_1x1_increase"
  top: "conv2_5_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_5_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_5_1x1_increase"
  top: "conv2_5_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_5_global_pool"
  type: "Pooling"
  bottom: "conv2_5_1x1_increase"
  top: "conv2_5_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_5_1x1_down"
  type: "Convolution"
  bottom: "conv2_5_global_pool"
  top: "conv2_5_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_5_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_5_1x1_down"
  top: "conv2_5_1x1_down"
}
layer {
  name: "conv2_5_1x1_up"
  type: "Convolution"
  bottom: "conv2_5_1x1_down"
  top: "conv2_5_1x1_up"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_5_prob"
  type: "Sigmoid"
  bottom: "conv2_5_1x1_up"
  top: "conv2_5_1x1_up"
}
layer {
  name: "conv2_5"
  type: "Axpy"
  bottom: "conv2_5_1x1_up"
  bottom: "conv2_5_1x1_increase"
  bottom: "conv2_4"
  top: "conv2_5"
}
layer {
  name: "conv2_5/relu"
  type: "ReLU"
  bottom: "conv2_5"
  top: "conv2_5"
}



layer {
  name: "conv2_6_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_5"
  top: "conv2_6_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_6_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_6_1x1_reduce"
  top: "conv2_6_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_6_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_6_1x1_reduce"
  top: "conv2_6_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_6_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_6_1x1_reduce"
  top: "conv2_6_1x1_reduce"
}
layer {
  name: "conv2_6_3x3"
  type: "Convolution"
  bottom: "conv2_6_1x1_reduce"
  top: "conv2_6_3x3"
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_6_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_6_3x3"
  top: "conv2_6_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_6_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_6_3x3"
  top: "conv2_6_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_6_3x3/relu"
  type: "ReLU"
  bottom: "conv2_6_3x3"
  top: "conv2_6_3x3"
}
layer {
  name: "conv2_6_1x1_increase"
  type: "Convolution"
  bottom: "conv2_6_3x3"
  top: "conv2_6_1x1_increase"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_6_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_6_1x1_increase"
  top: "conv2_6_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_6_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_6_1x1_increase"
  top: "conv2_6_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_6_global_pool"
  type: "Pooling"
  bottom: "conv2_6_1x1_increase"
  top: "conv2_6_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_6_1x1_down"
  type: "Convolution"
  bottom: "conv2_6_global_pool"
  top: "conv2_6_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_6_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_6_1x1_down"
  top: "conv2_6_1x1_down"
}
layer {
  name: "conv2_6_1x1_up"
  type: "Convolution"
  bottom: "conv2_6_1x1_down"
  top: "conv2_6_1x1_up"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_6_prob"
  type: "Sigmoid"
  bottom: "conv2_6_1x1_up"
  top: "conv2_6_1x1_up"
}
layer {
  name: "conv2_6"
  type: "Axpy"
  bottom: "conv2_6_1x1_up"
  bottom: "conv2_6_1x1_increase"
  bottom: "conv2_5"
  top: "conv2_6"
}
layer {
  name: "conv2_6/relu"
  type: "ReLU"
  bottom: "conv2_6"
  top: "conv2_6"
}



layer {
  name: "conv2_7_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_6"
  top: "conv2_7_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_7_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_7_1x1_reduce"
  top: "conv2_7_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_7_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_7_1x1_reduce"
  top: "conv2_7_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_7_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_7_1x1_reduce"
  top: "conv2_7_1x1_reduce"
}
layer {
  name: "conv2_7_3x3"
  type: "Convolution"
  bottom: "conv2_7_1x1_reduce"
  top: "conv2_7_3x3"
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_7_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_7_3x3"
  top: "conv2_7_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_7_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_7_3x3"
  top: "conv2_7_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_7_3x3/relu"
  type: "ReLU"
  bottom: "conv2_7_3x3"
  top: "conv2_7_3x3"
}
layer {
  name: "conv2_7_1x1_increase"
  type: "Convolution"
  bottom: "conv2_7_3x3"
  top: "conv2_7_1x1_increase"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_7_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_7_1x1_increase"
  top: "conv2_7_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_7_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_7_1x1_increase"
  top: "conv2_7_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_7_global_pool"
  type: "Pooling"
  bottom: "conv2_7_1x1_increase"
  top: "conv2_7_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_7_1x1_down"
  type: "Convolution"
  bottom: "conv2_7_global_pool"
  top: "conv2_7_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_7_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_7_1x1_down"
  top: "conv2_7_1x1_down"
}
layer {
  name: "conv2_7_1x1_up"
  type: "Convolution"
  bottom: "conv2_7_1x1_down"
  top: "conv2_7_1x1_up"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_7_prob"
  type: "Sigmoid"
  bottom: "conv2_7_1x1_up"
  top: "conv2_7_1x1_up"
}
layer {
  name: "conv2_7"
  type: "Axpy"
  bottom: "conv2_7_1x1_up"
  bottom: "conv2_7_1x1_increase"
  bottom: "conv2_6"
  top: "conv2_7"
}
layer {
  name: "conv2_7/relu"
  type: "ReLU"
  bottom: "conv2_7"
  top: "conv2_7"
}



layer {
  name: "conv2_8_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_7"
  top: "conv2_8_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_8_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_8_1x1_reduce"
  top: "conv2_8_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_8_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_8_1x1_reduce"
  top: "conv2_8_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_8_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_8_1x1_reduce"
  top: "conv2_8_1x1_reduce"
}
layer {
  name: "conv2_8_3x3"
  type: "Convolution"
  bottom: "conv2_8_1x1_reduce"
  top: "conv2_8_3x3"
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_8_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_8_3x3"
  top: "conv2_8_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_8_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_8_3x3"
  top: "conv2_8_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_8_3x3/relu"
  type: "ReLU"
  bottom: "conv2_8_3x3"
  top: "conv2_8_3x3"
}
layer {
  name: "conv2_8_1x1_increase"
  type: "Convolution"
  bottom: "conv2_8_3x3"
  top: "conv2_8_1x1_increase"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv2_8_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_8_1x1_increase"
  top: "conv2_8_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv2_8_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_8_1x1_increase"
  top: "conv2_8_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_8_global_pool"
  type: "Pooling"
  bottom: "conv2_8_1x1_increase"
  top: "conv2_8_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_8_1x1_down"
  type: "Convolution"
  bottom: "conv2_8_global_pool"
  top: "conv2_8_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_8_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_8_1x1_down"
  top: "conv2_8_1x1_down"
}
layer {
  name: "conv2_8_1x1_up"
  type: "Convolution"
  bottom: "conv2_8_1x1_down"
  top: "conv2_8_1x1_up"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_8_prob"
  type: "Sigmoid"
  bottom: "conv2_8_1x1_up"
  top: "conv2_8_1x1_up"
}
layer {
  name: "conv2_8"
  type: "Axpy"
  bottom: "conv2_8_1x1_up"
  bottom: "conv2_8_1x1_increase"
  bottom: "conv2_7"
  top: "conv2_8"
}
layer {
  name: "conv2_8/relu"
  type: "ReLU"
  bottom: "conv2_8"
  top: "conv2_8"
}

























































layer {
  name: "conv3_1_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_8"
  top: "conv3_1_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv3_1_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv3_1_1x1_reduce"
  top: "conv3_1_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_1_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv3_1_1x1_reduce"
  top: "conv3_1_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_1_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv3_1_1x1_reduce"
  top: "conv3_1_1x1_reduce"
}
layer {
  name: "conv3_1_3x3"
  type: "Convolution"
  bottom: "conv3_1_1x1_reduce"
  top: "conv3_1_3x3"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 2
  }
}
layer {
  name: "conv3_1_3x3/bn"
  type: "BatchNorm"
  bottom: "conv3_1_3x3"
  top: "conv3_1_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_1_3x3/bn/scale"
  type: "Scale"
  bottom: "conv3_1_3x3"
  top: "conv3_1_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_1_3x3/relu"
  type: "ReLU"
  bottom: "conv3_1_3x3"
  top: "conv3_1_3x3"
}
layer {
  name: "conv3_1_1x1_increase"
  type: "Convolution"
  bottom: "conv3_1_3x3"
  top: "conv3_1_1x1_increase"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv3_1_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv3_1_1x1_increase"
  top: "conv3_1_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_1_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv3_1_1x1_increase"
  top: "conv3_1_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_1_global_pool"
  type: "Pooling"
  bottom: "conv3_1_1x1_increase"
  top: "conv3_1_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv3_1_1x1_down"
  type: "Convolution"
  bottom: "conv3_1_global_pool"
  top: "conv3_1_1x1_down"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_1_1x1_down/relu"
  type: "ReLU"
  bottom: "conv3_1_1x1_down"
  top: "conv3_1_1x1_down"
}
layer {
  name: "conv3_1_1x1_up"
  type: "Convolution"
  bottom: "conv3_1_1x1_down"
  top: "conv3_1_1x1_up"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_1_prob"
  type: "Sigmoid"
  bottom: "conv3_1_1x1_up"
  top: "conv3_1_1x1_up"
}
layer {
  name: "conv3_1_1x1_proj"
  type: "Convolution"
  bottom: "conv2_8"
  top: "conv3_1_1x1_proj"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv3_1_1x1_proj/bn"
  type: "BatchNorm"
  bottom: "conv3_1_1x1_proj"
  top: "conv3_1_1x1_proj"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_1_1x1_proj/bn/scale"
  type: "Scale"
  bottom: "conv3_1_1x1_proj"
  top: "conv3_1_1x1_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_1"
  type: "Axpy"
  bottom: "conv3_1_1x1_up"
  bottom: "conv3_1_1x1_increase"
  bottom: "conv3_1_1x1_proj"
  top: "conv3_1"
}
layer {
  name: "conv3_1/relu"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2_1x1_reduce"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv3_2_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv3_2_1x1_reduce"
  top: "conv3_2_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_2_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv3_2_1x1_reduce"
  top: "conv3_2_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_2_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv3_2_1x1_reduce"
  top: "conv3_2_1x1_reduce"
}
layer {
  name: "conv3_2_3x3"
  type: "Convolution"
  bottom: "conv3_2_1x1_reduce"
  top: "conv3_2_3x3"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 1
  }
}
layer {
  name: "conv3_2_3x3/bn"
  type: "BatchNorm"
  bottom: "conv3_2_3x3"
  top: "conv3_2_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_2_3x3/bn/scale"
  type: "Scale"
  bottom: "conv3_2_3x3"
  top: "conv3_2_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_2_3x3/relu"
  type: "ReLU"
  bottom: "conv3_2_3x3"
  top: "conv3_2_3x3"
}
layer {
  name: "conv3_2_1x1_increase"
  type: "Convolution"
  bottom: "conv3_2_3x3"
  top: "conv3_2_1x1_increase"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_2_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv3_2_1x1_increase"
  top: "conv3_2_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_2_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv3_2_1x1_increase"
  top: "conv3_2_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_2_global_pool"
  type: "Pooling"
  bottom: "conv3_2_1x1_increase"
  top: "conv3_2_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv3_2_1x1_down"
  type: "Convolution"
  bottom: "conv3_2_global_pool"
  top: "conv3_2_1x1_down"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_2_1x1_down/relu"
  type: "ReLU"
  bottom: "conv3_2_1x1_down"
  top: "conv3_2_1x1_down"
}
layer {
  name: "conv3_2_1x1_up"
  type: "Convolution"
  bottom: "conv3_2_1x1_down"
  top: "conv3_2_1x1_up"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_2_prob"
  type: "Sigmoid"
  bottom: "conv3_2_1x1_up"
  top: "conv3_2_1x1_up"
}
layer {
  name: "conv3_2"
  type: "Axpy"
  bottom: "conv3_2_1x1_up"
  bottom: "conv3_2_1x1_increase"
  bottom: "conv3_1"
  top: "conv3_2"
}
layer {
  name: "conv3_2/relu"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3_1x1_reduce"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_3_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv3_3_1x1_reduce"
  top: "conv3_3_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_3_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv3_3_1x1_reduce"
  top: "conv3_3_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_3_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv3_3_1x1_reduce"
  top: "conv3_3_1x1_reduce"
}
layer {
  name: "conv3_3_3x3"
  type: "Convolution"
  bottom: "conv3_3_1x1_reduce"
  top: "conv3_3_3x3"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv3_3_3x3/bn"
  type: "BatchNorm"
  bottom: "conv3_3_3x3"
  top: "conv3_3_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_3_3x3/bn/scale"
  type: "Scale"
  bottom: "conv3_3_3x3"
  top: "conv3_3_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_3_3x3/relu"
  type: "ReLU"
  bottom: "conv3_3_3x3"
  top: "conv3_3_3x3"
}
layer {
  name: "conv3_3_1x1_increase"
  type: "Convolution"
  bottom: "conv3_3_3x3"
  top: "conv3_3_1x1_increase"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv3_3_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv3_3_1x1_increase"
  top: "conv3_3_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_3_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv3_3_1x1_increase"
  top: "conv3_3_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_3_global_pool"
  type: "Pooling"
  bottom: "conv3_3_1x1_increase"
  top: "conv3_3_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv3_3_1x1_down"
  type: "Convolution"
  bottom: "conv3_3_global_pool"
  top: "conv3_3_1x1_down"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_3_1x1_down/relu"
  type: "ReLU"
  bottom: "conv3_3_1x1_down"
  top: "conv3_3_1x1_down"
}
layer {
  name: "conv3_3_1x1_up"
  type: "Convolution"
  bottom: "conv3_3_1x1_down"
  top: "conv3_3_1x1_up"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_3_prob"
  type: "Sigmoid"
  bottom: "conv3_3_1x1_up"
  top: "conv3_3_1x1_up"
}
layer {
  name: "conv3_3"
  type: "Axpy"
  bottom: "conv3_3_1x1_up"
  bottom: "conv3_3_1x1_increase"
  bottom: "conv3_2"
  top: "conv3_3"
}
layer {
  name: "conv3_3/relu"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "conv3_4_1x1_reduce"
  type: "Convolution"
  bottom: "conv3_3"
  top: "conv3_4_1x1_reduce"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv3_4_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv3_4_1x1_reduce"
  top: "conv3_4_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_4_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv3_4_1x1_reduce"
  top: "conv3_4_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_4_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv3_4_1x1_reduce"
  top: "conv3_4_1x1_reduce"
}
layer {
  name: "conv3_4_3x3"
  type: "Convolution"
  bottom: "conv3_4_1x1_reduce"
  top: "conv3_4_3x3"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 32
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv3_4_3x3/bn"
  type: "BatchNorm"
  bottom: "conv3_4_3x3"
  top: "conv3_4_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_4_3x3/bn/scale"
  type: "Scale"
  bottom: "conv3_4_3x3"
  top: "conv3_4_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_4_3x3/relu"
  type: "ReLU"
  bottom: "conv3_4_3x3"
  top: "conv3_4_3x3"
}
layer {
  name: "conv3_4_1x1_increase"
  type: "Convolution"
  bottom: "conv3_4_3x3"
  top: "conv3_4_1x1_increase"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv3_4_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv3_4_1x1_increase"
  top: "conv3_4_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv3_4_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv3_4_1x1_increase"
  top: "conv3_4_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_4_global_pool"
  type: "Pooling"
  bottom: "conv3_4_1x1_increase"
  top: "conv3_4_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv3_4_1x1_down"
  type: "Convolution"
  bottom: "conv3_4_global_pool"
  top: "conv3_4_1x1_down"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_4_1x1_down/relu"
  type: "ReLU"
  bottom: "conv3_4_1x1_down"
  top: "conv3_4_1x1_down"
}
layer {
  name: "conv3_4_1x1_up"
  type: "Convolution"
  bottom: "conv3_4_1x1_down"
  top: "conv3_4_1x1_up"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_4_prob"
  type: "Sigmoid"
  bottom: "conv3_4_1x1_up"
  top: "conv3_4_1x1_up"
}
layer {
  name: "conv3_8"
  type: "Axpy"
  bottom: "conv3_4_1x1_up"
  bottom: "conv3_4_1x1_increase"
  bottom: "conv3_3"
  top: "conv3_8"
}
layer {
  name: "conv3_8/relu"
  type: "ReLU"
  bottom: "conv3_8"
  top: "conv3_8"
}
layer {
  name: "conv4_1_1x1_reduce"
  type: "Convolution"
  bottom: "conv3_8"
  top: "conv4_1_1x1_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv4_1_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv4_1_1x1_reduce"
  top: "conv4_1_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv4_1_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv4_1_1x1_reduce"
  top: "conv4_1_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_1_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv4_1_1x1_reduce"
  top: "conv4_1_1x1_reduce"
}
layer {
  name: "conv4_1_3x3"
  type: "Convolution"
  bottom: "conv4_1_1x1_reduce"
  top: "conv4_1_3x3"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 64
    stride: 2
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv4_1_3x3/bn"
  type: "BatchNorm"
  bottom: "conv4_1_3x3"
  top: "conv4_1_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv4_1_3x3/bn/scale"
  type: "Scale"
  bottom: "conv4_1_3x3"
  top: "conv4_1_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_1_3x3/relu"
  type: "ReLU"
  bottom: "conv4_1_3x3"
  top: "conv4_1_3x3"
}
layer {
  name: "conv4_1_1x1_increase"
  type: "Convolution"
  bottom: "conv4_1_3x3"
  top: "conv4_1_1x1_increase"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv4_1_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv4_1_1x1_increase"
  top: "conv4_1_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv4_1_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv4_1_1x1_increase"
  top: "conv4_1_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_1_global_pool"
  type: "Pooling"
  bottom: "conv4_1_1x1_increase"
  top: "conv4_1_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv4_1_1x1_down"
  type: "Convolution"
  bottom: "conv4_1_global_pool"
  top: "conv4_1_1x1_down"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_1_1x1_down/relu"
  type: "ReLU"
  bottom: "conv4_1_1x1_down"
  top: "conv4_1_1x1_down"
}
layer {
  name: "conv4_1_1x1_up"
  type: "Convolution"
  bottom: "conv4_1_1x1_down"
  top: "conv4_1_1x1_up"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_1_prob"
  type: "Sigmoid"
  bottom: "conv4_1_1x1_up"
  top: "conv4_1_1x1_up"
}
layer {
  name: "conv4_1_1x1_proj"
  type: "Convolution"
  bottom: "conv3_8"
  top: "conv4_1_1x1_proj"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv4_1_1x1_proj/bn"
  type: "BatchNorm"
  bottom: "conv4_1_1x1_proj"
  top: "conv4_1_1x1_proj"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv4_1_1x1_proj/bn/scale"
  type: "Scale"
  bottom: "conv4_1_1x1_proj"
  top: "conv4_1_1x1_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_1"
  type: "Axpy"
  bottom: "conv4_1_1x1_up"
  bottom: "conv4_1_1x1_increase"
  bottom: "conv4_1_1x1_proj"
  top: "conv4_1"
}
layer {
  name: "conv4_1/relu"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2_1x1_reduce"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2_1x1_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv4_2_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv4_2_1x1_reduce"
  top: "conv4_2_1x1_reduce"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv4_2_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv4_2_1x1_reduce"
  top: "conv4_2_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_2_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv4_2_1x1_reduce"
  top: "conv4_2_1x1_reduce"
}
layer {
  name: "conv4_2_3x3"
  type: "Convolution"
  bottom: "conv4_2_1x1_reduce"
  top: "conv4_2_3x3"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 64
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv4_2_3x3/bn"
  type: "BatchNorm"
  bottom: "conv4_2_3x3"
  top: "conv4_2_3x3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv4_2_3x3/bn/scale"
  type: "Scale"
  bottom: "conv4_2_3x3"
  top: "conv4_2_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_2_3x3/relu"
  type: "ReLU"
  bottom: "conv4_2_3x3"
  top: "conv4_2_3x3"
}
layer {
  name: "conv4_2_1x1_increase"
  type: "Convolution"
  bottom: "conv4_2_3x3"
  top: "conv4_2_1x1_increase"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
    type: "msra"
    }
  }
}
layer {
  name: "conv4_2_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv4_2_1x1_increase"
  top: "conv4_2_1x1_increase"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "conv4_2_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv4_2_1x1_increase"
  top: "conv4_2_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_2_global_pool"
  type: "Pooling"
  bottom: "conv4_2_1x1_increase"
  top: "conv4_2_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv4_2_1x1_down"
  type: "Convolution"
  bottom: "conv4_2_global_pool"
  top: "conv4_2_1x1_down"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_2_1x1_down/relu"
  type: "ReLU"
  bottom: "conv4_2_1x1_down"
  top: "conv4_2_1x1_down"
}
layer {
  name: "conv4_2_1x1_up"
  type: "Convolution"
  bottom: "conv4_2_1x1_down"
  top: "conv4_2_1x1_up"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_2_prob"
  type: "Sigmoid"
  bottom: "conv4_2_1x1_up"
  top: "conv4_2_1x1_up"
}
layer {
  name: "conv4_2"
  type: "Axpy"
  bottom: "conv4_2_1x1_up"
  bottom: "conv4_2_1x1_increase"
  bottom: "conv4_1"
  top: "conv4_2"
}
layer {
  name: "conv4_2/relu"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}



















layer {
  name: "pool5/7x7_s1"
  type: "Pooling"
  bottom: "conv4_2"
  top: "pool5/7x7_s1"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "pool5/dropout_7x7_s1"
  type: "Dropout"
  bottom: "pool5/7x7_s1"
  top: "pool5/7x7_s1"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer {
  name: "classifier"
  type: "InnerProduct"
  bottom: "pool5/7x7_s1"
  top: "classifier"
  inner_product_param {
    num_output: 16
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "classifier"
  bottom:"label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "classifier"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
